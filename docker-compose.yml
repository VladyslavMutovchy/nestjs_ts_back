services:
  node-app:
    build:
      context: . # Текущая директория
      dockerfile: Dockerfile # Dockerfile для бэкенда
    ports:
      - '3002:3002' # Порт для бэкенда
    volumes:
      - .:/usr/src/app # Монтируем весь бэкенд
      - /usr/src/app/node_modules # Изолируем node_modules
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=nestjs_db
    depends_on:
      - mysql

  frontend:
    build:
      context: ../react_practice_ts # Контекст сборки фронтенда
      dockerfile: Dockerfile # Dockerfile для фронтенда
    ports:
      - '3000:3000' # Порт для фронтенда
    volumes:
      - ../react_practice_ts/src/pages/App:/app/src/pages/App # Синхронизация папки App
      - ../react_practice_ts/node_modules:/app/node_modules # Монтируем node_modules, если это необходимо
    stdin_open: true # Для корректной работы hot-reload
    tty: true # Также для hot-reload
    depends_on:
      - node-app # Зависимость от бэкенда

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root

  mysql:
    image: mysql:8.3
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: nestjs_db
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d/ # добавим скрипт инициализации

volumes:
  mysql-data:
